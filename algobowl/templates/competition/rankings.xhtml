<html py:extends="master.xhtml" py:strip="True">
  <py:block name="title">
    Competitions List
  </py:block>
  <body py:block="body" py:strip="True">
    <?python
from algobowl.model import VerificationStatus

def cell_color(iput, ent):
    if iput not in ent.input_ranks.keys():
        return "bg-warning"
    return {
        VerificationStatus.accepted: "bg-success text-light",
        VerificationStatus.rejected: "bg-danger text-light",
        VerificationStatus.waiting: "",
    }[ent.input_ranks[iput].verification]
    ?>

    <div class="container">
      <h1 class="mb-3">
        Rankings: ${competition.name}
        <py:if test="ground_truth">
          (Ground Truth)
        </py:if>
      </h1>
      <div py:if="request.identity and request.identity['user'].admin"
           class="admin-rankings-controls mb-3">
        <a href="?ground_truth=t"
           class="btn btn-info"
           py:if="not ground_truth">
          <i class="fas fa-user-secret fa-fw"></i>
          View Ground Truth
        </a>
        <a href="?"
           class="btn btn-info"
           py:if="ground_truth">
          <i class="fas fa-user-check fa-fw"></i>
          View Student Verifications
        </a>
      </div>
      <div py:if="ov_groups" class="card mt-3 mb-3">
        <div class="card-body">
          <h4 class="card-title">
            Open Verification is Active
          </h4>
          <p class="card-text">
            Click on any output to download and run against your verifier.
            If you believe there to be a verification error, use the link
            below to submit a protest. Incorrect protests will count as one
            penalty against your group.
          </p>
          <a py:for="gid in ov_groups"
             href="${tg.url('/group/{}/ov_protest'.format(gid))}"
             class="btn btn-primary mr-2">
            <i class="far fa-thumbs-down fa-fw"></i>
            Submit Protest
            <py:if test="len(ov_groups) > 2">
              (Group ${gid})
            </py:if>
          </a>
        </div>
      </div>

      <table class="table table-striped table-responsive rankings-table">
        <thead>
          <tr>
            <th>Group</th>
            <th py:for="iput in inputs">
              <a href="${iput.data.url}"
                 py:content="iput.group_id"></a>
            </th>
            <th>Î£ Ranks</th>
            <th>Penalty</th>
            <th>Place</th>
          </tr>
        </thead>
        <tbody>
          <tr py:for="group, ent in sorted(groups.items(), key=lambda t: t[1])">
            <td py:content="group.name" class="truncate-small"></td>
            <td py:for="iput in inputs" class="${cell_color(iput, ent)}">
              <py:if test="iput in ent.input_ranks.keys()">
                <py:with vars="st=ent.input_ranks[iput]">
                  <py:def function="cell_text(st)">
                    <py:if test="st.verification.name == 'rejected'">
                      R
                    </py:if><py:else>
                    ${st.rank}
                    <small py:if="st.score is not None" class="input-score">
                      (${'{:.0f}'.format(st.score)})
                    </small>
                    </py:else>
                  </py:def>
                  <a py:if="st.output"
                     href="${st.output.data.url}"
                     class="table-download-link"
                     py:content="cell_text(st)" />
                  <span py:if="not st.output"
                        py:content="cell_text(st)" />
                </py:with>
              </py:if><py:else>
                N
              </py:else>
            </td>
            <td py:content="ent.sum_of_ranks"></td>
            <td py:content="ent.penalties"></td>
            <td>
              ${ent.place}
              <small class="score-rejects-total" py:if="ent.reject_count">
                (${ent.score}+${ent.reject_count}R)
              </small>
              <small class="score-rejects-total" py:if="not ent.reject_count">
                (${ent.score})
              </small>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </body>
</html>
